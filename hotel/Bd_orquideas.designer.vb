'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.42000
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="BD_orquideas")>  _
Partial Public Class Bd_orquideasDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Definiciones de métodos de extensibilidad"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub Inserttb_habitacion(instance As tb_habitacion)
    End Sub
  Partial Private Sub Updatetb_habitacion(instance As tb_habitacion)
    End Sub
  Partial Private Sub Deletetb_habitacion(instance As tb_habitacion)
    End Sub
  Partial Private Sub Inserttb_tipo(instance As tb_tipo)
    End Sub
  Partial Private Sub Updatetb_tipo(instance As tb_tipo)
    End Sub
  Partial Private Sub Deletetb_tipo(instance As tb_tipo)
    End Sub
  Partial Private Sub Inserttb_detalle_factura(instance As tb_detalle_factura)
    End Sub
  Partial Private Sub Updatetb_detalle_factura(instance As tb_detalle_factura)
    End Sub
  Partial Private Sub Deletetb_detalle_factura(instance As tb_detalle_factura)
    End Sub
  Partial Private Sub Inserttb_reservacion(instance As tb_reservacion)
    End Sub
  Partial Private Sub Updatetb_reservacion(instance As tb_reservacion)
    End Sub
  Partial Private Sub Deletetb_reservacion(instance As tb_reservacion)
    End Sub
  Partial Private Sub Inserttb_paquete(instance As tb_paquete)
    End Sub
  Partial Private Sub Updatetb_paquete(instance As tb_paquete)
    End Sub
  Partial Private Sub Deletetb_paquete(instance As tb_paquete)
    End Sub
  Partial Private Sub Inserttb_encabezado(instance As tb_encabezado)
    End Sub
  Partial Private Sub Updatetb_encabezado(instance As tb_encabezado)
    End Sub
  Partial Private Sub Deletetb_encabezado(instance As tb_encabezado)
    End Sub
  Partial Private Sub Inserttb_cliente(instance As tb_cliente)
    End Sub
  Partial Private Sub Updatetb_cliente(instance As tb_cliente)
    End Sub
  Partial Private Sub Deletetb_cliente(instance As tb_cliente)
    End Sub
  Partial Private Sub Inserttb_reservacion_evento(instance As tb_reservacion_evento)
    End Sub
  Partial Private Sub Updatetb_reservacion_evento(instance As tb_reservacion_evento)
    End Sub
  Partial Private Sub Deletetb_reservacion_evento(instance As tb_reservacion_evento)
    End Sub
  Partial Private Sub Inserttb_salon(instance As tb_salon)
    End Sub
  Partial Private Sub Updatetb_salon(instance As tb_salon)
    End Sub
  Partial Private Sub Deletetb_salon(instance As tb_salon)
    End Sub
  Partial Private Sub Inserttb_evento(instance As tb_evento)
    End Sub
  Partial Private Sub Updatetb_evento(instance As tb_evento)
    End Sub
  Partial Private Sub Deletetb_evento(instance As tb_evento)
    End Sub
  Partial Private Sub Inserttb_usuarios(instance As tb_usuarios)
    End Sub
  Partial Private Sub Updatetb_usuarios(instance As tb_usuarios)
    End Sub
  Partial Private Sub Deletetb_usuarios(instance As tb_usuarios)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("BD_orquideasConnectionString").ConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property tb_habitacion() As System.Data.Linq.Table(Of tb_habitacion)
		Get
			Return Me.GetTable(Of tb_habitacion)
		End Get
	End Property
	
	Public ReadOnly Property tb_tipo() As System.Data.Linq.Table(Of tb_tipo)
		Get
			Return Me.GetTable(Of tb_tipo)
		End Get
	End Property
	
	Public ReadOnly Property tb_detalle_factura() As System.Data.Linq.Table(Of tb_detalle_factura)
		Get
			Return Me.GetTable(Of tb_detalle_factura)
		End Get
	End Property
	
	Public ReadOnly Property tb_reservacion() As System.Data.Linq.Table(Of tb_reservacion)
		Get
			Return Me.GetTable(Of tb_reservacion)
		End Get
	End Property
	
	Public ReadOnly Property tb_paquete() As System.Data.Linq.Table(Of tb_paquete)
		Get
			Return Me.GetTable(Of tb_paquete)
		End Get
	End Property
	
	Public ReadOnly Property tb_encabezado() As System.Data.Linq.Table(Of tb_encabezado)
		Get
			Return Me.GetTable(Of tb_encabezado)
		End Get
	End Property
	
	Public ReadOnly Property tb_cliente() As System.Data.Linq.Table(Of tb_cliente)
		Get
			Return Me.GetTable(Of tb_cliente)
		End Get
	End Property
	
	Public ReadOnly Property tb_reservacion_evento() As System.Data.Linq.Table(Of tb_reservacion_evento)
		Get
			Return Me.GetTable(Of tb_reservacion_evento)
		End Get
	End Property
	
	Public ReadOnly Property tb_salon() As System.Data.Linq.Table(Of tb_salon)
		Get
			Return Me.GetTable(Of tb_salon)
		End Get
	End Property
	
	Public ReadOnly Property tb_evento() As System.Data.Linq.Table(Of tb_evento)
		Get
			Return Me.GetTable(Of tb_evento)
		End Get
	End Property
	
	Public ReadOnly Property tb_usuarios() As System.Data.Linq.Table(Of tb_usuarios)
		Get
			Return Me.GetTable(Of tb_usuarios)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tb_habitacion")>  _
Partial Public Class tb_habitacion
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _codigo_habitacion As String
	
	Private _metros As String
	
	Private _cantidad_camas As String
	
	Private _costo As System.Nullable(Of Integer)
	
	Private _estado As String
	
	Private _tipo_habitacion As String
	
	Private _tb_detalle_factura As EntitySet(Of tb_detalle_factura)
	
	Private _tb_tipo As EntityRef(Of tb_tipo)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Oncodigo_habitacionChanging(value As String)
    End Sub
    Partial Private Sub Oncodigo_habitacionChanged()
    End Sub
    Partial Private Sub OnmetrosChanging(value As String)
    End Sub
    Partial Private Sub OnmetrosChanged()
    End Sub
    Partial Private Sub Oncantidad_camasChanging(value As String)
    End Sub
    Partial Private Sub Oncantidad_camasChanged()
    End Sub
    Partial Private Sub OncostoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OncostoChanged()
    End Sub
    Partial Private Sub OnestadoChanging(value As String)
    End Sub
    Partial Private Sub OnestadoChanged()
    End Sub
    Partial Private Sub Ontipo_habitacionChanging(value As String)
    End Sub
    Partial Private Sub Ontipo_habitacionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._tb_detalle_factura = New EntitySet(Of tb_detalle_factura)(AddressOf Me.attach_tb_detalle_factura, AddressOf Me.detach_tb_detalle_factura)
		Me._tb_tipo = CType(Nothing, EntityRef(Of tb_tipo))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_codigo_habitacion", DbType:="NChar(75) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property codigo_habitacion() As String
		Get
			Return Me._codigo_habitacion
		End Get
		Set
			If (String.Equals(Me._codigo_habitacion, value) = false) Then
				Me.Oncodigo_habitacionChanging(value)
				Me.SendPropertyChanging
				Me._codigo_habitacion = value
				Me.SendPropertyChanged("codigo_habitacion")
				Me.Oncodigo_habitacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_metros", DbType:="NChar(75)")>  _
	Public Property metros() As String
		Get
			Return Me._metros
		End Get
		Set
			If (String.Equals(Me._metros, value) = false) Then
				Me.OnmetrosChanging(value)
				Me.SendPropertyChanging
				Me._metros = value
				Me.SendPropertyChanged("metros")
				Me.OnmetrosChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cantidad_camas", DbType:="NChar(25)")>  _
	Public Property cantidad_camas() As String
		Get
			Return Me._cantidad_camas
		End Get
		Set
			If (String.Equals(Me._cantidad_camas, value) = false) Then
				Me.Oncantidad_camasChanging(value)
				Me.SendPropertyChanging
				Me._cantidad_camas = value
				Me.SendPropertyChanged("cantidad_camas")
				Me.Oncantidad_camasChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_costo", DbType:="Int")>  _
	Public Property costo() As System.Nullable(Of Integer)
		Get
			Return Me._costo
		End Get
		Set
			If (Me._costo.Equals(value) = false) Then
				Me.OncostoChanging(value)
				Me.SendPropertyChanging
				Me._costo = value
				Me.SendPropertyChanged("costo")
				Me.OncostoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_estado", DbType:="NChar(75)")>  _
	Public Property estado() As String
		Get
			Return Me._estado
		End Get
		Set
			If (String.Equals(Me._estado, value) = false) Then
				Me.OnestadoChanging(value)
				Me.SendPropertyChanging
				Me._estado = value
				Me.SendPropertyChanged("estado")
				Me.OnestadoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tipo_habitacion", DbType:="NChar(75)")>  _
	Public Property tipo_habitacion() As String
		Get
			Return Me._tipo_habitacion
		End Get
		Set
			If (String.Equals(Me._tipo_habitacion, value) = false) Then
				If Me._tb_tipo.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Ontipo_habitacionChanging(value)
				Me.SendPropertyChanging
				Me._tipo_habitacion = value
				Me.SendPropertyChanged("tipo_habitacion")
				Me.Ontipo_habitacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="tb_habitacion_tb_detalle_factura", Storage:="_tb_detalle_factura", ThisKey:="codigo_habitacion", OtherKey:="codigo_habitacion")>  _
	Public Property tb_detalle_factura() As EntitySet(Of tb_detalle_factura)
		Get
			Return Me._tb_detalle_factura
		End Get
		Set
			Me._tb_detalle_factura.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="tb_tipo_tb_habitacion", Storage:="_tb_tipo", ThisKey:="tipo_habitacion", OtherKey:="codigo_Tipo", IsForeignKey:=true)>  _
	Public Property tb_tipo() As tb_tipo
		Get
			Return Me._tb_tipo.Entity
		End Get
		Set
			Dim previousValue As tb_tipo = Me._tb_tipo.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._tb_tipo.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._tb_tipo.Entity = Nothing
					previousValue.tb_habitacion.Remove(Me)
				End If
				Me._tb_tipo.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.tb_habitacion.Add(Me)
					Me._tipo_habitacion = value.codigo_Tipo
				Else
					Me._tipo_habitacion = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("tb_tipo")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_tb_detalle_factura(ByVal entity As tb_detalle_factura)
		Me.SendPropertyChanging
		entity.tb_habitacion = Me
	End Sub
	
	Private Sub detach_tb_detalle_factura(ByVal entity As tb_detalle_factura)
		Me.SendPropertyChanging
		entity.tb_habitacion = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tb_tipo")>  _
Partial Public Class tb_tipo
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _codigo_Tipo As String
	
	Private _nombre As String
	
	Private _descripcion As String
	
	Private _tb_habitacion As EntitySet(Of tb_habitacion)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Oncodigo_TipoChanging(value As String)
    End Sub
    Partial Private Sub Oncodigo_TipoChanged()
    End Sub
    Partial Private Sub OnnombreChanging(value As String)
    End Sub
    Partial Private Sub OnnombreChanged()
    End Sub
    Partial Private Sub OndescripcionChanging(value As String)
    End Sub
    Partial Private Sub OndescripcionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._tb_habitacion = New EntitySet(Of tb_habitacion)(AddressOf Me.attach_tb_habitacion, AddressOf Me.detach_tb_habitacion)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_codigo_Tipo", DbType:="NChar(75) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property codigo_Tipo() As String
		Get
			Return Me._codigo_Tipo
		End Get
		Set
			If (String.Equals(Me._codigo_Tipo, value) = false) Then
				Me.Oncodigo_TipoChanging(value)
				Me.SendPropertyChanging
				Me._codigo_Tipo = value
				Me.SendPropertyChanged("codigo_Tipo")
				Me.Oncodigo_TipoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_nombre", DbType:="NChar(75)")>  _
	Public Property nombre() As String
		Get
			Return Me._nombre
		End Get
		Set
			If (String.Equals(Me._nombre, value) = false) Then
				Me.OnnombreChanging(value)
				Me.SendPropertyChanging
				Me._nombre = value
				Me.SendPropertyChanged("nombre")
				Me.OnnombreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_descripcion", DbType:="NChar(100)")>  _
	Public Property descripcion() As String
		Get
			Return Me._descripcion
		End Get
		Set
			If (String.Equals(Me._descripcion, value) = false) Then
				Me.OndescripcionChanging(value)
				Me.SendPropertyChanging
				Me._descripcion = value
				Me.SendPropertyChanged("descripcion")
				Me.OndescripcionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="tb_tipo_tb_habitacion", Storage:="_tb_habitacion", ThisKey:="codigo_Tipo", OtherKey:="tipo_habitacion")>  _
	Public Property tb_habitacion() As EntitySet(Of tb_habitacion)
		Get
			Return Me._tb_habitacion
		End Get
		Set
			Me._tb_habitacion.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_tb_habitacion(ByVal entity As tb_habitacion)
		Me.SendPropertyChanging
		entity.tb_tipo = Me
	End Sub
	
	Private Sub detach_tb_habitacion(ByVal entity As tb_habitacion)
		Me.SendPropertyChanging
		entity.tb_tipo = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tb_detalle_factura")>  _
Partial Public Class tb_detalle_factura
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _codigo_detalle As String
	
	Private _codigo_reservacion As System.Nullable(Of Integer)
	
	Private _codigo_habitacion As String
	
	Private _tb_habitacion As EntityRef(Of tb_habitacion)
	
	Private _tb_reservacion As EntityRef(Of tb_reservacion)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Oncodigo_detalleChanging(value As String)
    End Sub
    Partial Private Sub Oncodigo_detalleChanged()
    End Sub
    Partial Private Sub Oncodigo_reservacionChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Oncodigo_reservacionChanged()
    End Sub
    Partial Private Sub Oncodigo_habitacionChanging(value As String)
    End Sub
    Partial Private Sub Oncodigo_habitacionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._tb_habitacion = CType(Nothing, EntityRef(Of tb_habitacion))
		Me._tb_reservacion = CType(Nothing, EntityRef(Of tb_reservacion))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_codigo_detalle", DbType:="VarChar(50) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property codigo_detalle() As String
		Get
			Return Me._codigo_detalle
		End Get
		Set
			If (String.Equals(Me._codigo_detalle, value) = false) Then
				Me.Oncodigo_detalleChanging(value)
				Me.SendPropertyChanging
				Me._codigo_detalle = value
				Me.SendPropertyChanged("codigo_detalle")
				Me.Oncodigo_detalleChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_codigo_reservacion", DbType:="Int")>  _
	Public Property codigo_reservacion() As System.Nullable(Of Integer)
		Get
			Return Me._codigo_reservacion
		End Get
		Set
			If (Me._codigo_reservacion.Equals(value) = false) Then
				If Me._tb_reservacion.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Oncodigo_reservacionChanging(value)
				Me.SendPropertyChanging
				Me._codigo_reservacion = value
				Me.SendPropertyChanged("codigo_reservacion")
				Me.Oncodigo_reservacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_codigo_habitacion", DbType:="NChar(75)")>  _
	Public Property codigo_habitacion() As String
		Get
			Return Me._codigo_habitacion
		End Get
		Set
			If (String.Equals(Me._codigo_habitacion, value) = false) Then
				If Me._tb_habitacion.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Oncodigo_habitacionChanging(value)
				Me.SendPropertyChanging
				Me._codigo_habitacion = value
				Me.SendPropertyChanged("codigo_habitacion")
				Me.Oncodigo_habitacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="tb_habitacion_tb_detalle_factura", Storage:="_tb_habitacion", ThisKey:="codigo_habitacion", OtherKey:="codigo_habitacion", IsForeignKey:=true)>  _
	Public Property tb_habitacion() As tb_habitacion
		Get
			Return Me._tb_habitacion.Entity
		End Get
		Set
			Dim previousValue As tb_habitacion = Me._tb_habitacion.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._tb_habitacion.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._tb_habitacion.Entity = Nothing
					previousValue.tb_detalle_factura.Remove(Me)
				End If
				Me._tb_habitacion.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.tb_detalle_factura.Add(Me)
					Me._codigo_habitacion = value.codigo_habitacion
				Else
					Me._codigo_habitacion = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("tb_habitacion")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="tb_reservacion_tb_detalle_factura", Storage:="_tb_reservacion", ThisKey:="codigo_reservacion", OtherKey:="codigo_reservacion", IsForeignKey:=true)>  _
	Public Property tb_reservacion() As tb_reservacion
		Get
			Return Me._tb_reservacion.Entity
		End Get
		Set
			Dim previousValue As tb_reservacion = Me._tb_reservacion.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._tb_reservacion.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._tb_reservacion.Entity = Nothing
					previousValue.tb_detalle_factura.Remove(Me)
				End If
				Me._tb_reservacion.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.tb_detalle_factura.Add(Me)
					Me._codigo_reservacion = value.codigo_reservacion
				Else
					Me._codigo_reservacion = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("tb_reservacion")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tb_reservacion")>  _
Partial Public Class tb_reservacion
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _codigo_reservacion As Integer
	
	Private _cantidad_de_personas As Integer
	
	Private _fecha_inicio As Date
	
	Private _fecha_finalizacion As Date
	
	Private _codigo_paquete As String
	
	Private _codigo_encabezado As System.Nullable(Of Integer)
	
	Private _tb_detalle_factura As EntitySet(Of tb_detalle_factura)
	
	Private _tb_paquete As EntityRef(Of tb_paquete)
	
	Private _tb_encabezado As EntityRef(Of tb_encabezado)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Oncodigo_reservacionChanging(value As Integer)
    End Sub
    Partial Private Sub Oncodigo_reservacionChanged()
    End Sub
    Partial Private Sub Oncantidad_de_personasChanging(value As Integer)
    End Sub
    Partial Private Sub Oncantidad_de_personasChanged()
    End Sub
    Partial Private Sub Onfecha_inicioChanging(value As Date)
    End Sub
    Partial Private Sub Onfecha_inicioChanged()
    End Sub
    Partial Private Sub Onfecha_finalizacionChanging(value As Date)
    End Sub
    Partial Private Sub Onfecha_finalizacionChanged()
    End Sub
    Partial Private Sub Oncodigo_paqueteChanging(value As String)
    End Sub
    Partial Private Sub Oncodigo_paqueteChanged()
    End Sub
    Partial Private Sub Oncodigo_encabezadoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Oncodigo_encabezadoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._tb_detalle_factura = New EntitySet(Of tb_detalle_factura)(AddressOf Me.attach_tb_detalle_factura, AddressOf Me.detach_tb_detalle_factura)
		Me._tb_paquete = CType(Nothing, EntityRef(Of tb_paquete))
		Me._tb_encabezado = CType(Nothing, EntityRef(Of tb_encabezado))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_codigo_reservacion", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property codigo_reservacion() As Integer
		Get
			Return Me._codigo_reservacion
		End Get
		Set
			If ((Me._codigo_reservacion = value)  _
						= false) Then
				Me.Oncodigo_reservacionChanging(value)
				Me.SendPropertyChanging
				Me._codigo_reservacion = value
				Me.SendPropertyChanged("codigo_reservacion")
				Me.Oncodigo_reservacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cantidad_de_personas", DbType:="Int NOT NULL")>  _
	Public Property cantidad_de_personas() As Integer
		Get
			Return Me._cantidad_de_personas
		End Get
		Set
			If ((Me._cantidad_de_personas = value)  _
						= false) Then
				Me.Oncantidad_de_personasChanging(value)
				Me.SendPropertyChanging
				Me._cantidad_de_personas = value
				Me.SendPropertyChanged("cantidad_de_personas")
				Me.Oncantidad_de_personasChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fecha_inicio", DbType:="Date NOT NULL")>  _
	Public Property fecha_inicio() As Date
		Get
			Return Me._fecha_inicio
		End Get
		Set
			If ((Me._fecha_inicio = value)  _
						= false) Then
				Me.Onfecha_inicioChanging(value)
				Me.SendPropertyChanging
				Me._fecha_inicio = value
				Me.SendPropertyChanged("fecha_inicio")
				Me.Onfecha_inicioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fecha_finalizacion", DbType:="Date NOT NULL")>  _
	Public Property fecha_finalizacion() As Date
		Get
			Return Me._fecha_finalizacion
		End Get
		Set
			If ((Me._fecha_finalizacion = value)  _
						= false) Then
				Me.Onfecha_finalizacionChanging(value)
				Me.SendPropertyChanging
				Me._fecha_finalizacion = value
				Me.SendPropertyChanged("fecha_finalizacion")
				Me.Onfecha_finalizacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_codigo_paquete", DbType:="NChar(75)")>  _
	Public Property codigo_paquete() As String
		Get
			Return Me._codigo_paquete
		End Get
		Set
			If (String.Equals(Me._codigo_paquete, value) = false) Then
				If Me._tb_paquete.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Oncodigo_paqueteChanging(value)
				Me.SendPropertyChanging
				Me._codigo_paquete = value
				Me.SendPropertyChanged("codigo_paquete")
				Me.Oncodigo_paqueteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_codigo_encabezado", DbType:="Int")>  _
	Public Property codigo_encabezado() As System.Nullable(Of Integer)
		Get
			Return Me._codigo_encabezado
		End Get
		Set
			If (Me._codigo_encabezado.Equals(value) = false) Then
				If Me._tb_encabezado.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Oncodigo_encabezadoChanging(value)
				Me.SendPropertyChanging
				Me._codigo_encabezado = value
				Me.SendPropertyChanged("codigo_encabezado")
				Me.Oncodigo_encabezadoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="tb_reservacion_tb_detalle_factura", Storage:="_tb_detalle_factura", ThisKey:="codigo_reservacion", OtherKey:="codigo_reservacion")>  _
	Public Property tb_detalle_factura() As EntitySet(Of tb_detalle_factura)
		Get
			Return Me._tb_detalle_factura
		End Get
		Set
			Me._tb_detalle_factura.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="tb_paquete_tb_reservacion", Storage:="_tb_paquete", ThisKey:="codigo_paquete", OtherKey:="codigo_paquete", IsForeignKey:=true)>  _
	Public Property tb_paquete() As tb_paquete
		Get
			Return Me._tb_paquete.Entity
		End Get
		Set
			Dim previousValue As tb_paquete = Me._tb_paquete.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._tb_paquete.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._tb_paquete.Entity = Nothing
					previousValue.tb_reservacion.Remove(Me)
				End If
				Me._tb_paquete.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.tb_reservacion.Add(Me)
					Me._codigo_paquete = value.codigo_paquete
				Else
					Me._codigo_paquete = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("tb_paquete")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="tb_encabezado_tb_reservacion", Storage:="_tb_encabezado", ThisKey:="codigo_encabezado", OtherKey:="codigo_encabezado", IsForeignKey:=true)>  _
	Public Property tb_encabezado() As tb_encabezado
		Get
			Return Me._tb_encabezado.Entity
		End Get
		Set
			Dim previousValue As tb_encabezado = Me._tb_encabezado.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._tb_encabezado.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._tb_encabezado.Entity = Nothing
					previousValue.tb_reservacion.Remove(Me)
				End If
				Me._tb_encabezado.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.tb_reservacion.Add(Me)
					Me._codigo_encabezado = value.codigo_encabezado
				Else
					Me._codigo_encabezado = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("tb_encabezado")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_tb_detalle_factura(ByVal entity As tb_detalle_factura)
		Me.SendPropertyChanging
		entity.tb_reservacion = Me
	End Sub
	
	Private Sub detach_tb_detalle_factura(ByVal entity As tb_detalle_factura)
		Me.SendPropertyChanging
		entity.tb_reservacion = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tb_paquete")>  _
Partial Public Class tb_paquete
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _codigo_paquete As String
	
	Private _nombre As String
	
	Private _costo As System.Nullable(Of Integer)
	
	Private _tb_reservacion As EntitySet(Of tb_reservacion)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Oncodigo_paqueteChanging(value As String)
    End Sub
    Partial Private Sub Oncodigo_paqueteChanged()
    End Sub
    Partial Private Sub OnnombreChanging(value As String)
    End Sub
    Partial Private Sub OnnombreChanged()
    End Sub
    Partial Private Sub OncostoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OncostoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._tb_reservacion = New EntitySet(Of tb_reservacion)(AddressOf Me.attach_tb_reservacion, AddressOf Me.detach_tb_reservacion)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_codigo_paquete", DbType:="NChar(75) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property codigo_paquete() As String
		Get
			Return Me._codigo_paquete
		End Get
		Set
			If (String.Equals(Me._codigo_paquete, value) = false) Then
				Me.Oncodigo_paqueteChanging(value)
				Me.SendPropertyChanging
				Me._codigo_paquete = value
				Me.SendPropertyChanged("codigo_paquete")
				Me.Oncodigo_paqueteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_nombre", DbType:="NChar(75)")>  _
	Public Property nombre() As String
		Get
			Return Me._nombre
		End Get
		Set
			If (String.Equals(Me._nombre, value) = false) Then
				Me.OnnombreChanging(value)
				Me.SendPropertyChanging
				Me._nombre = value
				Me.SendPropertyChanged("nombre")
				Me.OnnombreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_costo", DbType:="Int")>  _
	Public Property costo() As System.Nullable(Of Integer)
		Get
			Return Me._costo
		End Get
		Set
			If (Me._costo.Equals(value) = false) Then
				Me.OncostoChanging(value)
				Me.SendPropertyChanging
				Me._costo = value
				Me.SendPropertyChanged("costo")
				Me.OncostoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="tb_paquete_tb_reservacion", Storage:="_tb_reservacion", ThisKey:="codigo_paquete", OtherKey:="codigo_paquete")>  _
	Public Property tb_reservacion() As EntitySet(Of tb_reservacion)
		Get
			Return Me._tb_reservacion
		End Get
		Set
			Me._tb_reservacion.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_tb_reservacion(ByVal entity As tb_reservacion)
		Me.SendPropertyChanging
		entity.tb_paquete = Me
	End Sub
	
	Private Sub detach_tb_reservacion(ByVal entity As tb_reservacion)
		Me.SendPropertyChanging
		entity.tb_paquete = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tb_encabezado")>  _
Partial Public Class tb_encabezado
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _codigo_encabezado As Integer
	
	Private _numero_documento As String
	
	Private _fecha As System.Nullable(Of Date)
	
	Private _total As System.Nullable(Of Integer)
	
	Private _codigo_cliente As String
	
	Private _tb_reservacion As EntitySet(Of tb_reservacion)
	
	Private _tb_reservacion_evento As EntitySet(Of tb_reservacion_evento)
	
	Private _tb_cliente As EntityRef(Of tb_cliente)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Oncodigo_encabezadoChanging(value As Integer)
    End Sub
    Partial Private Sub Oncodigo_encabezadoChanged()
    End Sub
    Partial Private Sub Onnumero_documentoChanging(value As String)
    End Sub
    Partial Private Sub Onnumero_documentoChanged()
    End Sub
    Partial Private Sub OnfechaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnfechaChanged()
    End Sub
    Partial Private Sub OntotalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OntotalChanged()
    End Sub
    Partial Private Sub Oncodigo_clienteChanging(value As String)
    End Sub
    Partial Private Sub Oncodigo_clienteChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._tb_reservacion = New EntitySet(Of tb_reservacion)(AddressOf Me.attach_tb_reservacion, AddressOf Me.detach_tb_reservacion)
		Me._tb_reservacion_evento = New EntitySet(Of tb_reservacion_evento)(AddressOf Me.attach_tb_reservacion_evento, AddressOf Me.detach_tb_reservacion_evento)
		Me._tb_cliente = CType(Nothing, EntityRef(Of tb_cliente))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_codigo_encabezado", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property codigo_encabezado() As Integer
		Get
			Return Me._codigo_encabezado
		End Get
		Set
			If ((Me._codigo_encabezado = value)  _
						= false) Then
				Me.Oncodigo_encabezadoChanging(value)
				Me.SendPropertyChanging
				Me._codigo_encabezado = value
				Me.SendPropertyChanged("codigo_encabezado")
				Me.Oncodigo_encabezadoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_numero_documento", DbType:="VarChar(20)")>  _
	Public Property numero_documento() As String
		Get
			Return Me._numero_documento
		End Get
		Set
			If (String.Equals(Me._numero_documento, value) = false) Then
				Me.Onnumero_documentoChanging(value)
				Me.SendPropertyChanging
				Me._numero_documento = value
				Me.SendPropertyChanged("numero_documento")
				Me.Onnumero_documentoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fecha", DbType:="Date")>  _
	Public Property fecha() As System.Nullable(Of Date)
		Get
			Return Me._fecha
		End Get
		Set
			If (Me._fecha.Equals(value) = false) Then
				Me.OnfechaChanging(value)
				Me.SendPropertyChanging
				Me._fecha = value
				Me.SendPropertyChanged("fecha")
				Me.OnfechaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_total", DbType:="Int")>  _
	Public Property total() As System.Nullable(Of Integer)
		Get
			Return Me._total
		End Get
		Set
			If (Me._total.Equals(value) = false) Then
				Me.OntotalChanging(value)
				Me.SendPropertyChanging
				Me._total = value
				Me.SendPropertyChanged("total")
				Me.OntotalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_codigo_cliente", DbType:="NChar(75)")>  _
	Public Property codigo_cliente() As String
		Get
			Return Me._codigo_cliente
		End Get
		Set
			If (String.Equals(Me._codigo_cliente, value) = false) Then
				If Me._tb_cliente.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Oncodigo_clienteChanging(value)
				Me.SendPropertyChanging
				Me._codigo_cliente = value
				Me.SendPropertyChanged("codigo_cliente")
				Me.Oncodigo_clienteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="tb_encabezado_tb_reservacion", Storage:="_tb_reservacion", ThisKey:="codigo_encabezado", OtherKey:="codigo_encabezado")>  _
	Public Property tb_reservacion() As EntitySet(Of tb_reservacion)
		Get
			Return Me._tb_reservacion
		End Get
		Set
			Me._tb_reservacion.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="tb_encabezado_tb_reservacion_evento", Storage:="_tb_reservacion_evento", ThisKey:="codigo_encabezado", OtherKey:="codigo_encabezado")>  _
	Public Property tb_reservacion_evento() As EntitySet(Of tb_reservacion_evento)
		Get
			Return Me._tb_reservacion_evento
		End Get
		Set
			Me._tb_reservacion_evento.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="tb_cliente_tb_encabezado", Storage:="_tb_cliente", ThisKey:="codigo_cliente", OtherKey:="codigo_cliente", IsForeignKey:=true)>  _
	Public Property tb_cliente() As tb_cliente
		Get
			Return Me._tb_cliente.Entity
		End Get
		Set
			Dim previousValue As tb_cliente = Me._tb_cliente.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._tb_cliente.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._tb_cliente.Entity = Nothing
					previousValue.tb_encabezado.Remove(Me)
				End If
				Me._tb_cliente.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.tb_encabezado.Add(Me)
					Me._codigo_cliente = value.codigo_cliente
				Else
					Me._codigo_cliente = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("tb_cliente")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_tb_reservacion(ByVal entity As tb_reservacion)
		Me.SendPropertyChanging
		entity.tb_encabezado = Me
	End Sub
	
	Private Sub detach_tb_reservacion(ByVal entity As tb_reservacion)
		Me.SendPropertyChanging
		entity.tb_encabezado = Nothing
	End Sub
	
	Private Sub attach_tb_reservacion_evento(ByVal entity As tb_reservacion_evento)
		Me.SendPropertyChanging
		entity.tb_encabezado = Me
	End Sub
	
	Private Sub detach_tb_reservacion_evento(ByVal entity As tb_reservacion_evento)
		Me.SendPropertyChanging
		entity.tb_encabezado = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tb_cliente")>  _
Partial Public Class tb_cliente
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _codigo_cliente As String
	
	Private _nombre As String
	
	Private _apellido As String
	
	Private _direccion As String
	
	Private _telefono As String
	
	Private _correo As String
	
	Private _tb_tarjeta As String
	
	Private _tb_encabezado As EntitySet(Of tb_encabezado)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Oncodigo_clienteChanging(value As String)
    End Sub
    Partial Private Sub Oncodigo_clienteChanged()
    End Sub
    Partial Private Sub OnnombreChanging(value As String)
    End Sub
    Partial Private Sub OnnombreChanged()
    End Sub
    Partial Private Sub OnapellidoChanging(value As String)
    End Sub
    Partial Private Sub OnapellidoChanged()
    End Sub
    Partial Private Sub OndireccionChanging(value As String)
    End Sub
    Partial Private Sub OndireccionChanged()
    End Sub
    Partial Private Sub OntelefonoChanging(value As String)
    End Sub
    Partial Private Sub OntelefonoChanged()
    End Sub
    Partial Private Sub OncorreoChanging(value As String)
    End Sub
    Partial Private Sub OncorreoChanged()
    End Sub
    Partial Private Sub Ontb_tarjetaChanging(value As String)
    End Sub
    Partial Private Sub Ontb_tarjetaChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._tb_encabezado = New EntitySet(Of tb_encabezado)(AddressOf Me.attach_tb_encabezado, AddressOf Me.detach_tb_encabezado)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_codigo_cliente", DbType:="NChar(75) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property codigo_cliente() As String
		Get
			Return Me._codigo_cliente
		End Get
		Set
			If (String.Equals(Me._codigo_cliente, value) = false) Then
				Me.Oncodigo_clienteChanging(value)
				Me.SendPropertyChanging
				Me._codigo_cliente = value
				Me.SendPropertyChanged("codigo_cliente")
				Me.Oncodigo_clienteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_nombre", DbType:="NChar(75)")>  _
	Public Property nombre() As String
		Get
			Return Me._nombre
		End Get
		Set
			If (String.Equals(Me._nombre, value) = false) Then
				Me.OnnombreChanging(value)
				Me.SendPropertyChanging
				Me._nombre = value
				Me.SendPropertyChanged("nombre")
				Me.OnnombreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_apellido", DbType:="NChar(75)")>  _
	Public Property apellido() As String
		Get
			Return Me._apellido
		End Get
		Set
			If (String.Equals(Me._apellido, value) = false) Then
				Me.OnapellidoChanging(value)
				Me.SendPropertyChanging
				Me._apellido = value
				Me.SendPropertyChanged("apellido")
				Me.OnapellidoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_direccion", DbType:="NChar(75)")>  _
	Public Property direccion() As String
		Get
			Return Me._direccion
		End Get
		Set
			If (String.Equals(Me._direccion, value) = false) Then
				Me.OndireccionChanging(value)
				Me.SendPropertyChanging
				Me._direccion = value
				Me.SendPropertyChanged("direccion")
				Me.OndireccionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_telefono", DbType:="NChar(20)")>  _
	Public Property telefono() As String
		Get
			Return Me._telefono
		End Get
		Set
			If (String.Equals(Me._telefono, value) = false) Then
				Me.OntelefonoChanging(value)
				Me.SendPropertyChanging
				Me._telefono = value
				Me.SendPropertyChanged("telefono")
				Me.OntelefonoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_correo", DbType:="NChar(20)")>  _
	Public Property correo() As String
		Get
			Return Me._correo
		End Get
		Set
			If (String.Equals(Me._correo, value) = false) Then
				Me.OncorreoChanging(value)
				Me.SendPropertyChanging
				Me._correo = value
				Me.SendPropertyChanged("correo")
				Me.OncorreoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tb_tarjeta", DbType:="NChar(75)")>  _
	Public Property tb_tarjeta() As String
		Get
			Return Me._tb_tarjeta
		End Get
		Set
			If (String.Equals(Me._tb_tarjeta, value) = false) Then
				Me.Ontb_tarjetaChanging(value)
				Me.SendPropertyChanging
				Me._tb_tarjeta = value
				Me.SendPropertyChanged("tb_tarjeta")
				Me.Ontb_tarjetaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="tb_cliente_tb_encabezado", Storage:="_tb_encabezado", ThisKey:="codigo_cliente", OtherKey:="codigo_cliente")>  _
	Public Property tb_encabezado() As EntitySet(Of tb_encabezado)
		Get
			Return Me._tb_encabezado
		End Get
		Set
			Me._tb_encabezado.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_tb_encabezado(ByVal entity As tb_encabezado)
		Me.SendPropertyChanging
		entity.tb_cliente = Me
	End Sub
	
	Private Sub detach_tb_encabezado(ByVal entity As tb_encabezado)
		Me.SendPropertyChanging
		entity.tb_cliente = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tb_reservacion_evento")>  _
Partial Public Class tb_reservacion_evento
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _codigo_reservacion_eve As Integer
	
	Private _cantidad_de_personas As System.Nullable(Of Integer)
	
	Private _fecha_inicio As System.Nullable(Of Date)
	
	Private _fecha_finalizacion As System.Nullable(Of Date)
	
	Private _costo As System.Nullable(Of Integer)
	
	Private _codigo_evento As String
	
	Private _codigo_salon As String
	
	Private _codigo_encabezado As System.Nullable(Of Integer)
	
	Private _tb_encabezado As EntityRef(Of tb_encabezado)
	
	Private _tb_salon As EntityRef(Of tb_salon)
	
	Private _tb_evento As EntityRef(Of tb_evento)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Oncodigo_reservacion_eveChanging(value As Integer)
    End Sub
    Partial Private Sub Oncodigo_reservacion_eveChanged()
    End Sub
    Partial Private Sub Oncantidad_de_personasChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Oncantidad_de_personasChanged()
    End Sub
    Partial Private Sub Onfecha_inicioChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onfecha_inicioChanged()
    End Sub
    Partial Private Sub Onfecha_finalizacionChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onfecha_finalizacionChanged()
    End Sub
    Partial Private Sub OncostoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OncostoChanged()
    End Sub
    Partial Private Sub Oncodigo_eventoChanging(value As String)
    End Sub
    Partial Private Sub Oncodigo_eventoChanged()
    End Sub
    Partial Private Sub Oncodigo_salonChanging(value As String)
    End Sub
    Partial Private Sub Oncodigo_salonChanged()
    End Sub
    Partial Private Sub Oncodigo_encabezadoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Oncodigo_encabezadoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._tb_encabezado = CType(Nothing, EntityRef(Of tb_encabezado))
		Me._tb_salon = CType(Nothing, EntityRef(Of tb_salon))
		Me._tb_evento = CType(Nothing, EntityRef(Of tb_evento))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_codigo_reservacion_eve", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property codigo_reservacion_eve() As Integer
		Get
			Return Me._codigo_reservacion_eve
		End Get
		Set
			If ((Me._codigo_reservacion_eve = value)  _
						= false) Then
				Me.Oncodigo_reservacion_eveChanging(value)
				Me.SendPropertyChanging
				Me._codigo_reservacion_eve = value
				Me.SendPropertyChanged("codigo_reservacion_eve")
				Me.Oncodigo_reservacion_eveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cantidad_de_personas", DbType:="Int")>  _
	Public Property cantidad_de_personas() As System.Nullable(Of Integer)
		Get
			Return Me._cantidad_de_personas
		End Get
		Set
			If (Me._cantidad_de_personas.Equals(value) = false) Then
				Me.Oncantidad_de_personasChanging(value)
				Me.SendPropertyChanging
				Me._cantidad_de_personas = value
				Me.SendPropertyChanged("cantidad_de_personas")
				Me.Oncantidad_de_personasChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fecha_inicio", DbType:="Date")>  _
	Public Property fecha_inicio() As System.Nullable(Of Date)
		Get
			Return Me._fecha_inicio
		End Get
		Set
			If (Me._fecha_inicio.Equals(value) = false) Then
				Me.Onfecha_inicioChanging(value)
				Me.SendPropertyChanging
				Me._fecha_inicio = value
				Me.SendPropertyChanged("fecha_inicio")
				Me.Onfecha_inicioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fecha_finalizacion", DbType:="Date")>  _
	Public Property fecha_finalizacion() As System.Nullable(Of Date)
		Get
			Return Me._fecha_finalizacion
		End Get
		Set
			If (Me._fecha_finalizacion.Equals(value) = false) Then
				Me.Onfecha_finalizacionChanging(value)
				Me.SendPropertyChanging
				Me._fecha_finalizacion = value
				Me.SendPropertyChanged("fecha_finalizacion")
				Me.Onfecha_finalizacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_costo", DbType:="Int")>  _
	Public Property costo() As System.Nullable(Of Integer)
		Get
			Return Me._costo
		End Get
		Set
			If (Me._costo.Equals(value) = false) Then
				Me.OncostoChanging(value)
				Me.SendPropertyChanging
				Me._costo = value
				Me.SendPropertyChanged("costo")
				Me.OncostoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_codigo_evento", DbType:="VarChar(50)")>  _
	Public Property codigo_evento() As String
		Get
			Return Me._codigo_evento
		End Get
		Set
			If (String.Equals(Me._codigo_evento, value) = false) Then
				If Me._tb_evento.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Oncodigo_eventoChanging(value)
				Me.SendPropertyChanging
				Me._codigo_evento = value
				Me.SendPropertyChanged("codigo_evento")
				Me.Oncodigo_eventoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_codigo_salon", DbType:="NChar(75)")>  _
	Public Property codigo_salon() As String
		Get
			Return Me._codigo_salon
		End Get
		Set
			If (String.Equals(Me._codigo_salon, value) = false) Then
				If Me._tb_salon.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Oncodigo_salonChanging(value)
				Me.SendPropertyChanging
				Me._codigo_salon = value
				Me.SendPropertyChanged("codigo_salon")
				Me.Oncodigo_salonChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_codigo_encabezado", DbType:="Int")>  _
	Public Property codigo_encabezado() As System.Nullable(Of Integer)
		Get
			Return Me._codigo_encabezado
		End Get
		Set
			If (Me._codigo_encabezado.Equals(value) = false) Then
				If Me._tb_encabezado.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Oncodigo_encabezadoChanging(value)
				Me.SendPropertyChanging
				Me._codigo_encabezado = value
				Me.SendPropertyChanged("codigo_encabezado")
				Me.Oncodigo_encabezadoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="tb_encabezado_tb_reservacion_evento", Storage:="_tb_encabezado", ThisKey:="codigo_encabezado", OtherKey:="codigo_encabezado", IsForeignKey:=true)>  _
	Public Property tb_encabezado() As tb_encabezado
		Get
			Return Me._tb_encabezado.Entity
		End Get
		Set
			Dim previousValue As tb_encabezado = Me._tb_encabezado.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._tb_encabezado.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._tb_encabezado.Entity = Nothing
					previousValue.tb_reservacion_evento.Remove(Me)
				End If
				Me._tb_encabezado.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.tb_reservacion_evento.Add(Me)
					Me._codigo_encabezado = value.codigo_encabezado
				Else
					Me._codigo_encabezado = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("tb_encabezado")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="tb_salon_tb_reservacion_evento", Storage:="_tb_salon", ThisKey:="codigo_salon", OtherKey:="codigo_salon", IsForeignKey:=true)>  _
	Public Property tb_salon() As tb_salon
		Get
			Return Me._tb_salon.Entity
		End Get
		Set
			Dim previousValue As tb_salon = Me._tb_salon.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._tb_salon.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._tb_salon.Entity = Nothing
					previousValue.tb_reservacion_evento.Remove(Me)
				End If
				Me._tb_salon.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.tb_reservacion_evento.Add(Me)
					Me._codigo_salon = value.codigo_salon
				Else
					Me._codigo_salon = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("tb_salon")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="tb_evento_tb_reservacion_evento", Storage:="_tb_evento", ThisKey:="codigo_evento", OtherKey:="codigo_evento", IsForeignKey:=true)>  _
	Public Property tb_evento() As tb_evento
		Get
			Return Me._tb_evento.Entity
		End Get
		Set
			Dim previousValue As tb_evento = Me._tb_evento.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._tb_evento.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._tb_evento.Entity = Nothing
					previousValue.tb_reservacion_evento.Remove(Me)
				End If
				Me._tb_evento.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.tb_reservacion_evento.Add(Me)
					Me._codigo_evento = value.codigo_evento
				Else
					Me._codigo_evento = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("tb_evento")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tb_salon")>  _
Partial Public Class tb_salon
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _codigo_salon As String
	
	Private _nombre As String
	
	Private _estado As String
	
	Private _tb_reservacion_evento As EntitySet(Of tb_reservacion_evento)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Oncodigo_salonChanging(value As String)
    End Sub
    Partial Private Sub Oncodigo_salonChanged()
    End Sub
    Partial Private Sub OnnombreChanging(value As String)
    End Sub
    Partial Private Sub OnnombreChanged()
    End Sub
    Partial Private Sub OnestadoChanging(value As String)
    End Sub
    Partial Private Sub OnestadoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._tb_reservacion_evento = New EntitySet(Of tb_reservacion_evento)(AddressOf Me.attach_tb_reservacion_evento, AddressOf Me.detach_tb_reservacion_evento)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_codigo_salon", DbType:="NChar(75) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property codigo_salon() As String
		Get
			Return Me._codigo_salon
		End Get
		Set
			If (String.Equals(Me._codigo_salon, value) = false) Then
				Me.Oncodigo_salonChanging(value)
				Me.SendPropertyChanging
				Me._codigo_salon = value
				Me.SendPropertyChanged("codigo_salon")
				Me.Oncodigo_salonChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_nombre", DbType:="NChar(75)")>  _
	Public Property nombre() As String
		Get
			Return Me._nombre
		End Get
		Set
			If (String.Equals(Me._nombre, value) = false) Then
				Me.OnnombreChanging(value)
				Me.SendPropertyChanging
				Me._nombre = value
				Me.SendPropertyChanged("nombre")
				Me.OnnombreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_estado", DbType:="NChar(75)")>  _
	Public Property estado() As String
		Get
			Return Me._estado
		End Get
		Set
			If (String.Equals(Me._estado, value) = false) Then
				Me.OnestadoChanging(value)
				Me.SendPropertyChanging
				Me._estado = value
				Me.SendPropertyChanged("estado")
				Me.OnestadoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="tb_salon_tb_reservacion_evento", Storage:="_tb_reservacion_evento", ThisKey:="codigo_salon", OtherKey:="codigo_salon")>  _
	Public Property tb_reservacion_evento() As EntitySet(Of tb_reservacion_evento)
		Get
			Return Me._tb_reservacion_evento
		End Get
		Set
			Me._tb_reservacion_evento.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_tb_reservacion_evento(ByVal entity As tb_reservacion_evento)
		Me.SendPropertyChanging
		entity.tb_salon = Me
	End Sub
	
	Private Sub detach_tb_reservacion_evento(ByVal entity As tb_reservacion_evento)
		Me.SendPropertyChanging
		entity.tb_salon = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tb_evento")>  _
Partial Public Class tb_evento
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _codigo_evento As String
	
	Private _nombre As String
	
	Private _tb_reservacion_evento As EntitySet(Of tb_reservacion_evento)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Oncodigo_eventoChanging(value As String)
    End Sub
    Partial Private Sub Oncodigo_eventoChanged()
    End Sub
    Partial Private Sub OnnombreChanging(value As String)
    End Sub
    Partial Private Sub OnnombreChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._tb_reservacion_evento = New EntitySet(Of tb_reservacion_evento)(AddressOf Me.attach_tb_reservacion_evento, AddressOf Me.detach_tb_reservacion_evento)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_codigo_evento", DbType:="VarChar(50) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property codigo_evento() As String
		Get
			Return Me._codigo_evento
		End Get
		Set
			If (String.Equals(Me._codigo_evento, value) = false) Then
				Me.Oncodigo_eventoChanging(value)
				Me.SendPropertyChanging
				Me._codigo_evento = value
				Me.SendPropertyChanged("codigo_evento")
				Me.Oncodigo_eventoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_nombre", DbType:="NChar(10)")>  _
	Public Property nombre() As String
		Get
			Return Me._nombre
		End Get
		Set
			If (String.Equals(Me._nombre, value) = false) Then
				Me.OnnombreChanging(value)
				Me.SendPropertyChanging
				Me._nombre = value
				Me.SendPropertyChanged("nombre")
				Me.OnnombreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="tb_evento_tb_reservacion_evento", Storage:="_tb_reservacion_evento", ThisKey:="codigo_evento", OtherKey:="codigo_evento")>  _
	Public Property tb_reservacion_evento() As EntitySet(Of tb_reservacion_evento)
		Get
			Return Me._tb_reservacion_evento
		End Get
		Set
			Me._tb_reservacion_evento.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_tb_reservacion_evento(ByVal entity As tb_reservacion_evento)
		Me.SendPropertyChanging
		entity.tb_evento = Me
	End Sub
	
	Private Sub detach_tb_reservacion_evento(ByVal entity As tb_reservacion_evento)
		Me.SendPropertyChanging
		entity.tb_evento = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tb_usuarios")>  _
Partial Public Class tb_usuarios
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _codigo_usuario As Integer
	
	Private _nombre As String
	
	Private _contraseña As String
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Oncodigo_usuarioChanging(value As Integer)
    End Sub
    Partial Private Sub Oncodigo_usuarioChanged()
    End Sub
    Partial Private Sub OnnombreChanging(value As String)
    End Sub
    Partial Private Sub OnnombreChanged()
    End Sub
    Partial Private Sub OncontraseñaChanging(value As String)
    End Sub
    Partial Private Sub OncontraseñaChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_codigo_usuario", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property codigo_usuario() As Integer
		Get
			Return Me._codigo_usuario
		End Get
		Set
			If ((Me._codigo_usuario = value)  _
						= false) Then
				Me.Oncodigo_usuarioChanging(value)
				Me.SendPropertyChanging
				Me._codigo_usuario = value
				Me.SendPropertyChanged("codigo_usuario")
				Me.Oncodigo_usuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_nombre", DbType:="NChar(75)")>  _
	Public Property nombre() As String
		Get
			Return Me._nombre
		End Get
		Set
			If (String.Equals(Me._nombre, value) = false) Then
				Me.OnnombreChanging(value)
				Me.SendPropertyChanging
				Me._nombre = value
				Me.SendPropertyChanged("nombre")
				Me.OnnombreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_contraseña", DbType:="NChar(75)")>  _
	Public Property contraseña() As String
		Get
			Return Me._contraseña
		End Get
		Set
			If (String.Equals(Me._contraseña, value) = false) Then
				Me.OncontraseñaChanging(value)
				Me.SendPropertyChanging
				Me._contraseña = value
				Me.SendPropertyChanged("contraseña")
				Me.OncontraseñaChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
